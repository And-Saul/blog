[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Andrew-blog",
    "section": "",
    "text": "Canadian Births Time Series Analysis\n\n\n\n\n\n\nTime-series\n\n\nModelling\n\n\n\n\n\n\n\n\n\nFeb 17, 2025\n\n\nAndrew Saul\n\n\n\n\n\n\n\n\n\n\n\n\nR Patchwork hacks I found useful\n\n\n\n\n\n\nPatchwork\n\n\n\n\n\n\n\n\n\nFeb 4, 2025\n\n\nAndrew Saul\n\n\n\n\n\n\n\n\n\n\n\n\nImplementing Bayesian Simple Linear Regression with Stan R\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nJan 19, 2025\n\n\nAndrew Saul\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/canada-births-time-series/index.html",
    "href": "posts/canada-births-time-series/index.html",
    "title": "Canadian Births Time Series Analysis",
    "section": "",
    "text": "Show the code\nbirths_df &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-01-09/canada_births_1991_2022.csv')"
  },
  {
    "objectID": "posts/canada-births-time-series/index.html#introduction",
    "href": "posts/canada-births-time-series/index.html#introduction",
    "title": "Canadian Births Time Series Analysis",
    "section": "Introduction",
    "text": "Introduction\nThis work was inspired from the Tidy Tuesday session titled “Canadian NHL Player Birth Dates”. I utilised the R package fpp3 to analyse the data.\n\nShould births or birth rates be investigated?\nThe choice of variable is dependent upon the question being asked. A search using ChatGPT on this question revealed the following:\nLive births are the measure of absolute organic (excluding migration) growth per measurement period that contribute to the population size. This value is utilised for economic and resource planning, such as determining demand for resources like healthcare, education, housing, and social services.\nLive birth rate is the number of live births per 1,000 individuals in the population annually. It can be used for comparisons between countries or regions, regardless of population size. Birth rates are insightful for long-term analysis, especially in aging societies or declining populations\nFor the purposes of this blog I investigated births only\n\n\nGoals of blog\nThe goals of this blog were two-fold. Primarily I was interested in developing code to reveal birth data insights. Secondly, I was interested in revealing components of the time series."
  },
  {
    "objectID": "posts/canada-births-time-series/index.html#birth-data",
    "href": "posts/canada-births-time-series/index.html#birth-data",
    "title": "Canadian Births Time Series Analysis",
    "section": "Birth data",
    "text": "Birth data\nIn order to examine time-series data with the fpp3 package, the tibble data needs to be converted into a tsibble object..\n\n\nShow the code\n# creation of tsibble object\nts_births &lt;- \nbirths_df %&gt;% \n  # create new column as year-month character - then convert it to a mth type using yearmonth function\n  mutate(ymdate = yearmonth(paste(year, month))) %&gt;% \n  as_tsibble(index = ymdate)\n\n\nA plot of the number of monthly births in Canada from January 1991 is displayed in Figure 1.\n\n\nShow the code\nts_births %&gt;% \n  autoplot(births)+\n  labs(x = \"Year/Month\",\n       y = \"Births\",\n       title = \"Canadian Registered Births\")\n\n\n\n\n\n\n\n\nFigure 1: Canadian births\n\n\n\n\n\n\nSeasonality\nWe can investigate the seasonality of the plot using the ggseason function\n\n\nShow the code\nts_births %&gt;% \n  gg_season(births, labels = \"both\")\n\n\n\n\n\n\n\n\nFigure 2: Seasonality separated into years\n\n\n\n\n\nIn Figure 2, each year is plotted separately. However, with over 30 lines this plot is difficult to interpret. Instead, seasonality can be plotted by facetting the ggplot into months.\n\n\nShow the code\nts_births %&gt;% \n  gg_subseries(births, labels = \"both\")\n\n\n\n\n\n\n\n\nFigure 3: Seasonality: trends observed for each month\n\n\n\n\n\nIn Figure 3 it appears that most births occur in July (summer) and the fewest births occur in February (winter). One can also see from this plot that births peaked at the beginning of the time series and decreased to a minimum around 2001. From 2007 until 2021 the birth rate stabilised at a relatively high level, but fell once again for the final recorded year of 2022."
  },
  {
    "objectID": "posts/canada-births-time-series/index.html#correlations",
    "href": "posts/canada-births-time-series/index.html#correlations",
    "title": "Canadian Births Time Series Analysis",
    "section": "Correlations",
    "text": "Correlations\nAn assumption of time series modelling is that the previous time point(s) influence the current time point.\n\n\nShow the code\nts_births %&gt;% \n  gg_lag(births, lag = 1:12)+\n  labs(x = \"lag(birth, y_t)\", y = \"lag(birth, y_t-k\")\n\n\n\n\n\n\n\n\nFigure 4: Lag in months\n\n\n\n\n\nFigure 4 represents the correlation between time points separated by months, depicted by the lag number. We can see that there is a strong, maximum correlation between time points separated by 12 months. This indicates yearly seasonal variation.\n\nAutocorrelation Function (ACF)\n\n\nShow the code\nts_births %&gt;% \n  ACF(births) %&gt;% \n  autoplot() +\n  labs(title = \"Canadian monthly birth data\")\n\n\n\n\n\n\n\n\nFigure 5: Correlogram\n\n\n\n\n\nThe ACF depicts the relationships we see in the lag plots. A slow decline in ACF values vs lag number indicates that the value from the current time point is substantially influenced by values of time points both close and distant. A repeated pattern of increased ACF values indicate a seasonal component in the series. In Figure 5 both trend and seasonality are present. The repeated pattern in the ACF indicates a large seasonal component. As this repeated pattern peaks at 12 and 24 months, the seasonal component is yearly. The gradual reduction in ACF value is due to the trend component."
  },
  {
    "objectID": "posts/canada-births-time-series/index.html#time-series-decompostion",
    "href": "posts/canada-births-time-series/index.html#time-series-decompostion",
    "title": "Canadian Births Time Series Analysis",
    "section": "Time Series Decompostion",
    "text": "Time Series Decompostion\n\nTransformations\nWhen viewing Figure 1, the amount of variation should be consistant. For instance, the seasonal variation amplitude may increase by a constant factor over time. In order to maintain consistent variation, a transformation may be required.\n\n\nShow the code\nlambda &lt;- \n  ts_births %&gt;% \n  features(births,features = \"guerrero\") %&gt;% \n  pull(lambda_guerrero)\n\nts_births_bc &lt;- \n  ts_births %&gt;% \n  mutate(BC_births = box_cox(births, lambda))\n\nts_births_bc %&gt;% \n  autoplot(BC_births)+\n    labs(y = \"\",\n       title = (paste0(\n         \"Transformed gas production with \\\\lambda = \",\n         round(lambda,2))))\n\n\n\n\n\n\n\n\nFigure 6: Transformed Canadian birth time trend\n\n\n\n\n\nFor the population data, a box-cox transformation value was calculated to be 0.1273038. However, the variation seen in ?@fig-fig-transformation appeared similar to the non-transformed data in Figure 1, so therefore data transformation was not implemented for further analysis.\n\n\nARIMA\nARIMA models aim to describe the autocorrelations in the data\n\nStage 1\nInvestigate the differencing between data points. The code below plots the difference between successive time points ie \\(y_t\\) and \\(y_{t-1}\\).\n\n\nShow the code\nts_births %&gt;% \n  mutate(differencing = difference(births, lag=12)) %&gt;% \n   autoplot(differencing) + labs(subtitle = \"Changes in monthly births\")\n\n\n\n\n\n\n\n\nFigure 7: Differencing by one month\n\n\n\n\n\nIn figure Figure 7 the differencing by one month has not created a non-stationary plot. However, when differencing by 12 months (Figure 8) less of the seasonality is present.\n\n\nShow the code\nts_births %&gt;% \n  mutate(differencing = difference(births, lag=12)) %&gt;% \n   autoplot(differencing) + labs(subtitle = \"Changes in monthly births\")\n\n\n\n\n\n\n\n\nFigure 8: Differencing by twelve months\n\n\n\n\n\n\n\nShow the code\nts_births %&gt;% \n  ACF(difference(births, lag=12)) %&gt;% \n  autoplot() + labs(subtitle = \"Changes in monthly births\")\n\n\n\n\n\n\n\n\nFigure 9: ACF plot of twelve month differencing\n\n\n\n\n\nFigure Figure 9 demonstrates the non-stationary differencing effect in an ACF plot. Only lags around 12 were not greater than the significance levels (blue lines). The slow decay of lagged values indicate that previous values heavily influence the current value. Only those values around 12 months have little to no influence.\n\n\nShow the code\nts_births %&gt;% \n  gg_tsdisplay(difference(births), plot_type='partial')\n\n\n\n\n\n\n\n\n\n\n\n\nSTL decomposition (Seasonal and Trend decomposition using LOESS)\nSTL decomposition involves splitting up the data into trend/cyclical, seasonal and residual components. If it has been ascertained that the decomposition is multiplicative then components will need to be transformed. The Canadian population data appears additive and no transformation is deemed necessary.\n\n\nShow the code\n dcmp &lt;- \n  ts_births_bc %&gt;% \n  model(stl = STL(births))\n\n\n\n\nShow the code\ncomponents(dcmp) |&gt;\n  as_tsibble() |&gt;\n  autoplot(births, colour=\"gray\") +\n  geom_line(aes(y=trend), colour = \"#D55E00\") +\n  labs(\n    y = \"Births\",\n    title = \"Canadian Birth Data\"\n  )\n\n\n\n\n\n\n\n\nFigure 10: Trend pattern overlaying the data\n\n\n\n\n\nFigure 10 demonstrates the trend component overlaying the complete plot.\n\n\nShow the code\n ts_births_bc %&gt;% \n  model(stl = STL(births, robust = F)) %&gt;% \n  components() %&gt;% autoplot()\n\n\n\n\n\n\n\n\nFigure 11: STL decomposition\n\n\n\n\n\nFigure 11 is a representation of the plot divided into the three STL components. The trend component is maximum at the beginning of the trace, then decreases to its minimum, finally regaining most of its gains with a period of stability before decreasing during the covid period. It is noteworthy that the seasonal component can change slowly over time. The bars on the side of each plots have the same length."
  },
  {
    "objectID": "posts/canada-births-time-series/index.html#forecasting",
    "href": "posts/canada-births-time-series/index.html#forecasting",
    "title": "Canadian Births Time Series Analysis",
    "section": "Forecasting",
    "text": "Forecasting\nBaseline (simple) forecasting methods include the mean, naive and seasonal naive methods. These methods often act as benchmarks to more complicated techniques\n\n\nShow the code\n# set training data before 2018\ntrain &lt;- \n  ts_births %&gt;% \n  filter(year &lt;2018)\n\n#set period for forecast data\npred_pop &lt;- \n  ts_births %&gt;% \n  filter(year &gt;=2018)\n\n#fit data\npop_fit &lt;- \n  train %&gt;% \n  model(\n    Mean = MEAN(births),\n    `Naïve` = NAIVE(births),\n    `Seasonal naïve` = SNAIVE(births),\n    Drift = NAIVE(births ~ drift())\n  )\n\n# produce forecasts for period 2019-2022\npop_2019_22 &lt;- \n  pop_fit %&gt;% \n  forecast(new_data = pred_pop)\n\n# plot data with forecasts\npop_2019_22 %&gt;% \n  autoplot(ts_births %&gt;% filter(year &gt;=2014), level = NULL)+\n  autolayer(pred_pop, births, color = \"black\")\n\n\n\n\n\n\n\n\nFigure 12: Benchmark forecast methods\n\n\n\n\n\nFigure 12 demonstrates four methods of benchmark forecasting. The mean method forecasts all future values as the average of all historical values. The Naive method forecasts all future values as the last observed value. The naive-seasonal method forecasts each new value to be equal to the last observed value from the same season. The drift method allows changes to increase or decrease in time, where the gradient is set as the average change seen in the historical data. In this figure the last four years were forecasted using the four methods."
  },
  {
    "objectID": "posts/canada-births-time-series/index.html#exponential-smoothing",
    "href": "posts/canada-births-time-series/index.html#exponential-smoothing",
    "title": "Canadian Births Time Series Analysis",
    "section": "Exponential Smoothing",
    "text": "Exponential Smoothing\nHistorically this technique has often been used for forecasting. Forecasts are produced by weighting past observations in an exponential manner. That is, the more recent the observation, the greater the weighting towards the forecast. A list of exponential smoothing factors are noted in chapter 8.4 of the fpp3 webbook.\n\nHolt-Winters method\nHolt-Winters method accounts not only for trend but also seasonality. The method comprises the forecasting equation, as well as three smoothing equations accounting for the level, trend and seasonality of the data.\nThe two variations of this method relate to the seasonal component. If the seasonal variations are constant though the series then the additive method is chosen. If however the variations are changing proportional to the level of the series then the multiplicative method is chosen.\nCode for the two seasonality models are shown below. A comparison of the fits for both models are compared.\n\n\n\nTable 1: Comparison of Additive and Multiplicative HW methods\n\n\n\nShow the code\nfit &lt;- \n  ts_births %&gt;% \n  model(\n    additive = ETS(births ~ error(\"A\") + trend(\"A\") + season(\"A\")),\n    multiplicative = ETS(births ~ error(\"M\") + trend(\"A\") + season(\"M\"))\n    )\n\nfc &lt;- fit %&gt;% forecast() \n\n\n\n\n\n\nFits of additive and multiplicative HW models\n\n\nShow the code\naugment(fit)\n\n\n# A tsibble: 768 x 6 [1M]\n# Key:       .model [2]\n   .model     ymdate births .fitted  .resid  .innov\n   &lt;chr&gt;       &lt;mth&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 additive 1991 Jan  32213  33606. -1393.  -1393. \n 2 additive 1991 Feb  30345  30936.  -591.   -591. \n 3 additive 1991 Mar  34869  33865.  1004.   1004. \n 4 additive 1991 Apr  35398  34303.  1095.   1095. \n 5 additive 1991 May  36371  36493.  -122.   -122. \n 6 additive 1991 Jun  34378  35478. -1100.  -1100. \n 7 additive 1991 Jul  35436  35931.  -495.   -495. \n 8 additive 1991 Aug  34421  34932.  -511.   -511. \n 9 additive 1991 Sep  34410  34465.   -54.5   -54.5\n10 additive 1991 Oct  33092  33223.  -131.   -131. \n# ℹ 758 more rows\n\n\nShow the code\ntidy(fit) %&gt;% \n  spread(.model, estimate)\n\n\n# A tibble: 17 × 3\n   term       additive multiplicative\n   &lt;chr&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n 1 alpha      0.761           0.401  \n 2 b[0]     -26.3           -43.4    \n 3 beta       0.000112        0.00838\n 4 gamma      0.00241         0.360  \n 5 l[0]   34964.          35324.     \n 6 s[-1]  -1850.              0.911  \n 7 s[-10] -2915.              0.918  \n 8 s[-11] -1331.              0.953  \n 9 s[-2]    173.              0.975  \n10 s[-3]   1347.              1.02   \n11 s[-4]   1399.              1.01   \n12 s[-5]   1994.              1.06   \n13 s[-6]    678.              1.03   \n14 s[-7]   1573.              1.09   \n15 s[-8]    190.              1.05   \n16 s[-9]    490.              1.04   \n17 s[0]   -1748.              0.944  \n\n\nNote that for the additive model, all the seasonal components add to 0. For the multiplicative model, all the seasonal components add to 1.\n\n\nShow the code\nfc %&gt;% \n  autoplot(filter(ts_births, ymdate &gt;= yearmonth(\"2018 Jan\")), level = 95)\n\n\n\n\n\n\n\n\nFigure 13: Comparison between the additive and multiplicative models\n\n\n\n\n\nIn Figure 13 the difference between additive and multiplicative levels is small. However, the 95% prediction intervals are noticably greater for the additive model.\nWe can also investigate the effect of dampening on the additive (or multiplicative) model. This is a common method that performs extremely well. See @11.40\n\n\nShow the code\nts_births %&gt;% \n  filter(year&lt;2019) %&gt;% \n  model(\n    hl = ETS(births ~ error(\"A\") + trend(\"Ad\") + season(\"A\"))\n  ) %&gt;% \n  forecast(h = \"48 months\") %&gt;% \nautoplot(ts_births |&gt; filter(between (ymdate, yearmonth(\"2018 Jan\"), yearmonth(\"2022 Dec\"))))+\n  labs(title = str_wrap(\"80% & 95% prediction intervals for the dampend additive model on Canadian population for 2019-2022.\",80),\n       subtitle = c(\"The black line represents actual population values. The blue line represents the mean forecast.\"),\n       x = \"Date\")\n\n\n\n\n\n\n\n\nFigure 14: Seasonal Additive Exponential Smoothing with Trend Dampening\n\n\n\n\n\nThe 80% and 95% confidence intervals calculated using the holt-linear method are displayed in Figure 14. The ETS function utilises state-space modelling to calculate the confidence intervals."
  }
]